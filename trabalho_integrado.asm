;************** AULA 01 - PROGRAMA PARA PISCAR LED *****************
;Aluno:Danton Coelho Valadares			Matricula:526983
LIST   P=PIC16F628A
;RADIX DEC	
#INCLUDE <P16F628A.INC>
	__CONFIG _INTRC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_ON & _BODEN_OFF & _LVP_OFF & _CP_OFF & _MCLRE_OFF & _DATA_CP_OFF 
	;ou __CONFIG H'3F10'

	CBLOCK		0x20						;ENDEREÇO INICIAL DA MEMÓRIA DE USUÁRIO
	CONTADOR1
	CONTADOR2
	CONTADOR3
	CONTADOR4
	CONTADOR5
	ENDC								;FIM DO BLOCO DE MEMÓRIA		
	ORG	0x00							;ENDEREÇO INICIAL DE PROCESSAMENTO
;1=INPUT 0=OUTPUT
;########################################
	CLRF	PORTA               				;Limpa o portA
	CLRF	PORTB
	MOVLW   0x07                  				;7 desabilita os comparadores (ver datasheet)
	MOVWF   CMCON              				;Escreve o Valor 7 no reg. CMCON
	BCF        STATUS, RP1
	BSF        STATUS, RP0
;########################################
	MOVLW	B'11100000'
	MOVWF	TRISB
;########################################
	MOVLW	B'11111101'
	MOVWF	TRISA
;########################################
	#DEFINE	BOTAO		PORTA,2		;BOTAO QUE SOLICITA TRAVESSIA DE PEDESTRE
	#DEFINE	S1RED 		PORTB,0		;LUZ VERMELHA DO SINAL1
	#DEFINE 	S1YELLOW 	PORTB,1		;LUZ AMARELA DO SINAL1
	#DEFINE 	S1GREEN		PORTB,2		;LUZ VERDE DO SINAL1
	#DEFINE	S2RED 		PORTB,3		;LUZ VERMELHA DO SINAL2
	#DEFINE 	S2YELLOW 	PORTB,4		;LUZ AMARELA DO SINAL2
	#DEFINE 	S2GREEN 		PORTB,5		;LUZ VERDE DO SINAL2
;########################################
	GOTO	INICIO
;########################################
AJUSTE
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
RETURN
;##########################################################
ATRASO
	CALL ATRASO1
	CALL ATRASO4
	CALL ATRASO4
	CALL ATRASO4
	CALL ATRASO4
	CALL ATRASO4
	CALL ATRASO4
	CALL AJUSTE
	CALL AJUSTE
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
RETURN	
;##########################################################
ATRASO1	
	MOVLW	10
	MOVWF	CONTADOR2
	CALL 	ATRASO2
	DECFSZ	CONTADOR1	
	GOTO 	ATRASO1
RETURN
;##########################################################			
ATRASO2
	MOVLW	10
	MOVWF	CONTADOR3
	CALL 	ATRASO3
	DECFSZ	CONTADOR2	
	GOTO	ATRASO2
RETURN
;##########################################################
ATRASO3
	MOVLW	10
	MOVWF	CONTADOR4
	CALL 	ATRASO4
	DECFSZ	CONTADOR3	
	GOTO	ATRASO3
RETURN
;##########################################################
ATRASO4
	DECFSZ	CONTADOR4	
	GOTO	ATRASO4
RETURN
;##########################################################
S1RED_S2GREEN
		BSF S1RED
		BCF S1YELLOW
		BCF S1GREEN
		BCF S2RED
		BCF S2YELLOW
		BSF S2GREEN
RETURN	
;##########################################################
S1RED_S2YELLOW
		BSF S1RED
		BCF S1YELLOW
		BCF S1GREEN
		BCF S2RED
		BSF S2YELLOW
		BCF S2GREEN
RETURN
;##########################################################
S1GREEN_S2RED
		BCF S1RED
		BCF S1YELLOW
		BSF S1GREEN
		BSF S2RED
		BCF S2YELLOW
		BCF S2GREEN
RETURN
;##########################################################
S1YELLOW_S2RED
		BCF S1RED
		BSF S1YELLOW
		BCF S1GREEN
		BSF S2RED
		BCF S2YELLOW
		BCF S2GREEN
RETURN
;##########################################################
CONTROLE_SEMAFORO
	;LOOP:
	;CALL S1RED_S2GREEN
	;	4 SEGUNDOS SEMPRE VERIFICANDO SE O BOTÃO FOI APERTADO
	;	SE O BOTAO FOI APERTADO, CHAMA O CICLO DE TRAVESSIA DE PEDESTRE 1 VEZ E DEPOIS RETORNA AO INICIO DO LOOP
	;CALL S1RED_S2YELLOW
	;	3 SEGUNDOS SEMPRE VERIFICANDO SE O BOTÃO FOI APERTADO
	;	SE O BOTAO FOI APERTADO, CHAMA O CICLO DE TRAVESSIA DE PEDESTRE 1 VEZ E DEPOIS RETORNA AO INICIO DO LOOP
	;CALL S1GREEN_S2RED
	;	4 SEGUNDOS SEMPRE VERIFICANDO SE O BOTÃO FOI APERTADO
	;	SE O BOTAO FOI APERTADO, CHAMA O CICLO DE TRAVESSIA DE PEDESTRE 1 VEZ E DEPOIS RETORNA AO INICIO DO LOOP
	;CALL S1YELLOW_S2RED
	;	3 SEGUNDOS SEMPRE VERIFICANDO SE O BOTÃO FOI APERTADO
	;	SE O BOTAO FOI APERTADO, CHAMA O CICLO DE TRAVESSIA DE PEDESTRE 1 VEZ E DEPOIS RETORNA AO INICIO DO LOOP
	;GOTO LOOP
FIM_CICLO
RETURN
;##########################################################
INICIO
	CLRF	PORTA		;LIMPA O PORTA
	CLRF	PORTB		;LIMPA O PORTB
	BSF 		STATUS, RP0
	CLRF 	TRISB
	CLRF 	TRISA
	CLRF 	TRISA
	BCF 		STATUS, RP0
REPETE
	CALL 	CONTROLE_SEMAFORO
	GOTO 	REPETE
END